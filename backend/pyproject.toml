[tool.poetry]
name = "fastapi-boilerplate"
version = "0.1.0"
description = "Minimal FastAPI boilerplate backend"
authors = ["Your Team"]
readme = "README.md"
packages = [{include = "models"}]

[tool.poetry.dependencies]
python = "^3.9"
sqlmodel = "^0.0.14"
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.9"
python-dotenv = "^1.0.0"
pydantic = "^2.5.0"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
alembic = "^1.16.2"
passlib = "^1.7.4"
email-validator = "^2.2.0"
bcrypt = "^4.3.0"
pyjwt = "^2.10.1"
python-multipart = "^0.0.20"
httpx = "^0.27.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []
fixable = ["ALL"]
unfixable = []
target-version = "py39"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]
pythonpath = ["."]
