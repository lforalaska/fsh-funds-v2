"""Initial migration: users and donor management tables

Revision ID: 8c7dc72df793
Revises: 
Create Date: 2025-09-09 22:06:29.549198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '8c7dc72df793'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('donors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preferred_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('suffix', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mobile_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('work_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address_line_1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address_line_2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('job_title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preferred_contact_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('communication_preferences', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('do_not_email', sa.Boolean(), nullable=False),
    sa.Column('do_not_call', sa.Boolean(), nullable=False),
    sa.Column('do_not_mail', sa.Boolean(), nullable=False),
    sa.Column('total_gifts', sa.Float(), nullable=False),
    sa.Column('total_gift_count', sa.Integer(), nullable=False),
    sa.Column('first_gift_date', sa.DateTime(), nullable=True),
    sa.Column('last_gift_date', sa.DateTime(), nullable=True),
    sa.Column('largest_gift', sa.Float(), nullable=False),
    sa.Column('average_gift', sa.Float(), nullable=False),
    sa.Column('donor_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('donor_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('wealth_rating', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('capacity_rating', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_donors_email'), 'donors', ['email'], unique=False)
    op.create_index(op.f('ix_donors_email_key'), 'donors', ['email_key'], unique=False)
    op.create_index(op.f('ix_donors_first_name'), 'donors', ['first_name'], unique=False)
    op.create_index(op.f('ix_donors_full_name'), 'donors', ['full_name'], unique=False)
    op.create_index(op.f('ix_donors_last_name'), 'donors', ['last_name'], unique=False)
    op.create_index(op.f('ix_donors_name_key'), 'donors', ['name_key'], unique=False)
    op.create_index(op.f('ix_donors_phone'), 'donors', ['phone'], unique=False)
    op.create_index(op.f('ix_donors_phone_key'), 'donors', ['phone_key'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('donor_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('communications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('donor_id', sa.Integer(), nullable=False),
    sa.Column('communication_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('direction', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subject', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('contact_person', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('contact_date', sa.DateTime(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('email_opened', sa.Boolean(), nullable=True),
    sa.Column('email_clicked', sa.Boolean(), nullable=True),
    sa.Column('email_bounced', sa.Boolean(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=False),
    sa.Column('follow_up_date', sa.DateTime(), nullable=True),
    sa.Column('follow_up_completed', sa.Boolean(), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['donor_id'], ['donors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_communications_communication_type'), 'communications', ['communication_type'], unique=False)
    op.create_index(op.f('ix_communications_contact_date'), 'communications', ['contact_date'], unique=False)
    op.create_index(op.f('ix_communications_donor_id'), 'communications', ['donor_id'], unique=False)
    op.create_table('donor_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('donor_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('assigned_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['donor_id'], ['donors.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id', 'donor_id', 'tag_id')
    )
    op.create_table('gifts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('donor_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('gift_date', sa.DateTime(), nullable=False),
    sa.Column('gift_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.Column('designation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fund_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('transaction_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('check_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('receipt_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('acknowledged', sa.Boolean(), nullable=False),
    sa.Column('acknowledged_date', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('gift_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_anonymous', sa.Boolean(), nullable=False),
    sa.Column('is_tribute', sa.Boolean(), nullable=False),
    sa.Column('tribute_info', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tax_deductible_amount', sa.Float(), nullable=True),
    sa.Column('receipt_sent', sa.Boolean(), nullable=False),
    sa.Column('receipt_sent_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['donor_id'], ['donors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gifts_amount'), 'gifts', ['amount'], unique=False)
    op.create_index(op.f('ix_gifts_donor_id'), 'gifts', ['donor_id'], unique=False)
    op.create_index(op.f('ix_gifts_gift_date'), 'gifts', ['gift_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gifts_gift_date'), table_name='gifts')
    op.drop_index(op.f('ix_gifts_donor_id'), table_name='gifts')
    op.drop_index(op.f('ix_gifts_amount'), table_name='gifts')
    op.drop_table('gifts')
    op.drop_table('donor_tags')
    op.drop_index(op.f('ix_communications_donor_id'), table_name='communications')
    op.drop_index(op.f('ix_communications_contact_date'), table_name='communications')
    op.drop_index(op.f('ix_communications_communication_type'), table_name='communications')
    op.drop_table('communications')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_donors_phone_key'), table_name='donors')
    op.drop_index(op.f('ix_donors_phone'), table_name='donors')
    op.drop_index(op.f('ix_donors_name_key'), table_name='donors')
    op.drop_index(op.f('ix_donors_last_name'), table_name='donors')
    op.drop_index(op.f('ix_donors_full_name'), table_name='donors')
    op.drop_index(op.f('ix_donors_first_name'), table_name='donors')
    op.drop_index(op.f('ix_donors_email_key'), table_name='donors')
    op.drop_index(op.f('ix_donors_email'), table_name='donors')
    op.drop_table('donors')
    # ### end Alembic commands ###
